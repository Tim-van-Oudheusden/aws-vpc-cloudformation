AWSTemplateFormatVersion: 2010-09-09
Description: >
  This CloudFormation template simplifies the setup of CloudTrail resources necessary 
  for monitoring and recording activities within the environment. 
  It facilitates the creation of a secure CloudTrail trail, 
  a related SNS topic for notifications, and configurations for CloudWatch Logs to retain and manage log data.

Parameters:
  EnvironmentName:
    Type: String
    Default: dev

  CloudWatchLogsRetentionInDays:
    Description: The number of days log events are kept in CloudWatch Logs
    Type: Number
    Default: 7
    AllowedValues:
      [
        1,
        3,
        5,
        7,
        14,
        30,
        60,
        90,
        120,
        150,
        180,
        365,
        400,
        545,
        731,
        1827,
        3653,
      ]

  LoggingBucketName:
    Description: Name of the Bucket to Create for CloudTrail Logs
    Type: String

  CloudTrailLogGroupName:
    Type: String
    Default: CloudTrail/DefaultLogGroup

  CreateTopic:
    Type: String
    Description: Boolean to create topic or use existing one
    AllowedValues:
      - true
      - false

Conditions:
  CreateTopic: !Equals [!Ref 'CreateTopic', 'true']

Resources:

  CloudTrailTopic:
    Condition: CreateTopic
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: CloudTrail Notification Topic

  CloudTrailTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Condition: CreateTopic
    Properties:
      Topics: [!Ref CloudTrailTopic]
      PolicyDocument:
        Version: 2008-10-17
        Statement:
          - Sid: AWSCloudTrailSNSPolicy
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Resource: '*'
            Action: SNS:Publish

  CloudTrailKMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: CloudTrail KMS Key
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Id: key-default-1
        Statement:
          - Sid: Allow administration of the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              [
                'kms:Create*',
                'kms:Describe*',
                'kms:Enable*',
                'kms:List*',
                'kms:Put*',
                'kms:Update*',
                'kms:Revoke*',
                'kms:Disable*',
                'kms:Get*',
                'kms:Delete*',
                'kms:ScheduleKeyDeletion',
                'kms:CancelKeyDeletion',
              ]
            Resource: '*'
          - Sid: Allow use of the key
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action:
              [
                'kms:Encrypt',
                'kms:Decrypt',
                'kms:ReEncrypt*',
                'kms:GenerateDataKey*',
                'kms:DescribeKey',
              ]
            Resource: '*'

  CloudtrailKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}KMSKey
      TargetKeyId: !Ref CloudTrailKMSKey

  CloudTrailToCloudWatchLogsRole:
    Type: AWS::IAM::Role
    Properties:
      Path: '/'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: SendtoCloudWatchLogs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AWSCloudTrailCreateLogStream2014110
                Effect: Allow
                Action: logs:CreateLogStream
                Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${CloudTrailLogGroupName}:log-stream:*
              - Sid: AWSCloudTrailPutLogEvents20141101
                Effect: Allow
                Action: logs:PutLogEvents
                Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${CloudTrailLogGroupName}:log-stream:*

  CloudTrailLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref CloudTrailLogGroupName
      RetentionInDays: !Ref CloudWatchLogsRetentionInDays

  CloudTrail:
    Type: AWS::CloudTrail::Trail
    Properties:
      S3BucketName: !Ref LoggingBucketName
      SnsTopicName:
        Fn::If:
          - CreateTopic
          - !GetAtt CloudTrailTopic.TopicName
          - !Ref AWS::NoValue
      IsLogging: true
      KMSKeyId: !Ref CloudTrailKMSKey
      EnableLogFileValidation: true
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: true
      IsOrganizationTrail: true
      CloudWatchLogsRoleArn: !GetAtt CloudTrailToCloudWatchLogsRole.Arn
      CloudWatchLogsLogGroupArn: !GetAtt CloudTrailLogGroup.Arn

Outputs:
  CloudTrailTopicArn:
    Condition: CreateTopic
    Value: !Ref CloudTrailTopic
    Description: ARN of the SNS Topic Created

  CloudTrailLogGroupName:
    Value: !Ref CloudTrailLogGroupName
    Description: Location in CloudWatch Logs where CloudTrail Events are sent

  CloudTrailLogGroupArn:
    Value: !GetAtt CloudTrailLogGroup.Arn
    Description: ARN Location in CloudWatch Logs where CloudTrail Events are sent
    Export:
      Name: !Sub ${EnvironmentName}-CloudTrailLogGroupArn

  CloudTrailKMSKeyArn:
    Value: !GetAtt CloudTrailKMSKey.Arn
    Description: ARN of the KMS Key used to encrypt CloudTrail events
